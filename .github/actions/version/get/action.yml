name: Generate version
description: Generate version
inputs:
  additional-arguments:
    description: Additional arguments to send to GitVersion
    required: false
    default: ''
  disable-cache:
    description: Whether to disable GitVersion cache
    required: false
    default: 'false'
  disable-normalization:
    description: Whether to disable GitVersion normalization
    required: false
    default: 'false'
  disable-shallow-clone-check:
    description: Whether to disable the check for shallow clone
    required: false
    default: 'false'
  override-config:
    description: |
      Optional override for the configuration file. This should be newline-separated key-value pairs, e.g.:
      update-build-number=false
      next-version=1.1.1
    required: false
    default: ''
  update-assembly-info:
    description: Whether to update versions in the AssemblyInfo files
    required: false
    default: 'false'
  update-assembly-info-filename:
    description: Update versions in specified file
    required: false
    default: 'false'
  use-config-file:
    description: Whether to use the GitVersion configuration file
    required: false
    default: 'true'
outputs:
  assembly-sem-ver:
    description: Assembly semantic version
    value: ${{ steps.get-version.outputs.assemblySemVer }}
  assembly-sem-file-ver:
    description: Assembly semantic file version
    value: ${{ steps.get-version.outputs.assemblySemFileVer }}
  branch-name:
    description: Branch name
    value: ${{ steps.get-version.outputs.branchName }}
  build-meta-data:
    description: Build metadata
    value: ${{ steps.get-version.outputs.buildMetaData }}
  build-meta-data-padded:
    description: Build metadata padded
    value: ${{ steps.get-version.outputs.buildMetaDataPadded }}
  commit-date:
    description: Commit date
    value: ${{ steps.get-version.outputs.commitDate }}
  commits-since-version-source:
    description: Commits since version source
    value: ${{ steps.get-version.outputs.commitsSinceVersionSource }}
  commits-since-version-source-padded:
    description: Commits since version source padded
    value: ${{ steps.get-version.outputs.commitsSinceVersionSourcePadded }}
  escaped-branch-name:
    description: Escaped branch name
    value: ${{ steps.get-version.outputs.escapedBranchName }}
  full-build-meta-data:
    description: Full build metadata
    value: ${{ steps.get-version.outputs.fullBuildMetaData }}
  full-sem-ver:
    description: Full semantic version
    value: ${{ steps.get-version.outputs.fullSemVer }}
  informational-version:
    description: Informational version
    value: ${{ steps.get-version.outputs.informationalVersion }}
  legacy-sem-ver:
    description: Legacy semantic version
    value: ${{ steps.get-version.outputs.legacySemVer }}
  legacy-sem-ver-padded:
    description: Legacy semantic version padded
    value: ${{ steps.get-version.outputs.legacySemVerPadded }}
  major: 
    description: Major version
    value: ${{ steps.get-version.outputs.major }}
  minor:
    description: Minor version
    value: ${{ steps.get-version.outputs.minor }}
  major-minor-patch:
    description: Major minor patch
    value: ${{ steps.get-version.outputs.majorMinorPatch }}
  nuget-pre-release-tag:
    description: NuGet pre-release tag
    value: ${{ steps.get-version.outputs.nuGetPreReleaseTag }}
  nuget-pre-release-tag-v2:
    description: NuGet pre-release tag v2
    value: ${{ steps.get-version.outputs.nuGetPreReleaseTagV2 }}
  nuget-version:
    description: NuGet version
    value: ${{ steps.get-version.outputs.nuGetVersion }}
  nuget-version-v2:
    description: NuGet version v2
    value: ${{ steps.get-version.outputs.nuGetVersionV2 }}
  patch:
    description: Patch version
    value: ${{ steps.get-version.outputs.patch }}
  pre-release-label:
    description: Pre-release label
    value: ${{ steps.get-version.outputs.preReleaseLabel }}
  pre-release-label-with-dash:
    description: Pre-release label with dash
    value: ${{ steps.get-version.outputs.preReleaseLabelWithDash }}
  pre-release-number:
    description: Pre-release number
    value: ${{ steps.get-version.outputs.preReleaseNumber }}
  pre-release-tag:
    description: Pre-release tag
    value: ${{ steps.get-version.outputs.preReleaseTag }}
  pre-release-tag-with-dash:
    description: Pre-release tag with dash
    value: ${{ steps.get-version.outputs.preReleaseTagWithDash }}
  sem-ver:
    description: Semantic version
    value: ${{ steps.get-version.outputs.semVer }}
  sha:
    description: SHA
    value: ${{ steps.get-version.outputs.sha }}
  short-sha:
    description: Short SHA
    value: ${{ steps.get-version.outputs.shortSha }}
  uncommitted-changes:
    description: Uncommitted changes
    value: ${{ steps.get-version.outputs.uncommittedChanges }}
  version-source-sha:
    description: Version source SHA
    value: ${{ steps.get-version.outputs.versionSourceSha }}
  weighted-pre-release-number:
    description: Weighted pre-release number
    value: ${{ steps.get-version.outputs.weightedPreReleaseNumber }}
runs:
  using: composite
  steps:
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1.1.1
      with:
        versionSpec: '5.x'
    - name: Create version configuration file
      shell: bash
      run: |
        CONFIG_FILE=$(cat <<EOF
        assembly-versioning-format: '{Major}.{Minor}.{Patch}.{env:BUILD_NUMBER ?? 0}'
        assembly-file-versioning-format: '{Major}.{Minor}.{Patch}.{env:BUILD_NUMBER ?? 0}'
        assembly-informational-format: '{Major}.{Minor}.{Patch}.{env:BUILD_NUMBER ?? 0}'
        tag-prefix: v
        major-version-bump-message: '\+semver:\s?(breaking|major)'
        minor-version-bump-message: '\+semver:\s?(feature|minor)'
        patch-version-bump-message: '\+semver:\s?(fix|patch)'
        no-bump-message: '\+semver:\s?(none|skip)'
        legacy-semver-padding: 0
        build-metadata-padding: 0
        commit-message-incrementing: Disabled
        commit-date-format: 'o'
        update-build-number: true
        
        branches:
          main:
            regex: ^main$
            tag: ''
            increment: None
            mode: ContinuousDelivery
            prevent-increment-of-merged-branch-version: true
            track-merge-target: false
            is-release-branch: false
            tracks-release-branches: false
            is-mainline: true
            pre-release-weight: 55000
          hotfix:
            regex: ^hotfix.*$
            tag: ''
            source-branches:
              - main
            mode: ContinuousDelivery
            increment: Patch
            prevent-increment-of-merged-branch-version: true
            track-merge-target: false
            is-release-branch: false
            tracks-release-branches: false
            is-mainline: false
            pre-release-weight: 30000
          release:
            regex: ^release.*$
            tag: ''
            source-branches:
              - develop
            mode: ContinuousDelivery
            increment: Minor
            prevent-increment-of-merged-branch-version: true
            track-merge-target: false
            tracks-release-branches: false
            is-release-branch: true
            is-mainline: false
            pre-release-weight: 30000
          develop:
            regex: ^develop$
            tag: beta
            source-branches:
              - main
            mode: ContinuousDelivery
            increment: Minor
            prevent-increment-of-merged-branch-version: true
            track-merge-target: true
            tracks-release-branches: true
            is-release-branch: false
            is-mainline: false
            pre-release-weight: 0
          feature:
            regex: ^(feature|feat|fix|docs|style|refactor|test|chore)[/-]
            tag: alpha
            source-branches:
              - develop
              - feature
            mode: ContinuousDelivery
            increment: None
            prevent-increment-of-merged-branch-version: true
            track-merge-target: false
            tracks-release-branches: false
            is-release-branch: false
            is-mainline: false
            pre-release-weight: 30000
          pull-request:
            regex: ^(pull|pull\-requests|pr)[/-]
            tag: pr
            source-branches:
              - develop
              - main
              - release
              - feature
              - hotfix
            mode: ContinuousDelivery
            increment: None
            prevent-increment-of-merged-branch-version: true
            tag-number-pattern: '[/-](?<number>\d+)[-/]'
            track-merge-target: false
            tracks-release-branches: false
            is-release-branch: false
            is-mainline: false
            pre-release-weight: 30000
        
        ignore:
          sha: []
        merge-message-formats: {}
        EOF
        )
        echo "state=created" >> $GITHUB_OUTPUT
        echo "$CONFIG_FILE" > "GitVersion.yml"
    - name: Determine Version
      id: get-version
      uses: gittools/actions/gitversion/execute@v1.1.1
      with:
        targetPath: ${{ inputs.target-path }}
        disableCache: ${{ inputs.disable-cache }}
        disableNormalization: ${{ inputs.disable-normalization }}
        disableShallowCloneCheck: ${{ inputs.disable-shallow-clone-check }}
        useConfigFile: true
        configFilePath: GitVersion.yml
        overrideConfig: ${{ inputs.override-config }}
        updateAssemblyInfo: ${{ inputs.update-assembly-info }}
        updateAssemblyInfoFilename: ${{ inputs.update-assembly-info-filename }}
        additionalArguments: ${{ inputs.additional-arguments }}
    - name: Remove config file
      shell: bash
      if: always() && steps.get-version.outputs.state == 'created'
      run: |
        rm "GitVersion.yml"
